{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\B3BlogApp\\\\Frontend\\\\src\\\\pages\\\\SingleBlog.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPostById, likePost, unlikePost, addComment } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingleBlog() {\n  _s();\n  var _post$likes;\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [commentText, setCommentText] = useState(\"\");\n  const dummyUserId = \"user123\";\n  const ws = useRef(null); // WebSocket reference\n\n  // Fetch post on mount\n  useEffect(() => {\n    getPostById(id).then(res => setPost(res.data)).catch(err => console.error(err));\n  }, [id]);\n\n  // Setup WebSocket connection\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:4001\");\n    ws.current.onopen = () => console.log(\"WebSocket connected\");\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.postId === (post === null || post === void 0 ? void 0 : post._id)) {\n        setPost(data.post); // update post in real-time\n      }\n    };\n    ws.current.onclose = () => console.log(\"WebSocket disconnected\");\n    return () => ws.current.close();\n  }, [post === null || post === void 0 ? void 0 : post._id]);\n  const sendWsUpdate = updatedPost => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify({\n        postId: updatedPost._id,\n        post: updatedPost\n      }));\n    }\n  };\n\n  // Like post\n  const handleLike = async () => {\n    try {\n      const res = await likePost(post._id, dummyUserId);\n      setPost(res.data.post);\n      sendWsUpdate(res.data.post); // send update to other clients\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Unlike post\n  const handleUnlike = async () => {\n    try {\n      if (post.likes.length === 0) return;\n      const likeId = post.likes[0]._id;\n      const res = await unlikePost(post._id, likeId);\n      setPost(res.data.post);\n      sendWsUpdate(res.data.post);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Add comment\n  const handleAddComment = async () => {\n    if (!commentText.trim()) return;\n    try {\n      const res = await addComment(post._id, dummyUserId, commentText);\n      setPost(res.data.post);\n      setCommentText(\"\");\n      sendWsUpdate(res.data.post);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", ((_post$likes = post.likes) === null || _post$likes === void 0 ? void 0 : _post$likes.length) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnlike,\n        children: \"Unlike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(SingleBlog, \"2MaZUOGbE2BnBbF/+/oI6Lebevk=\", false, function () {\n  return [useParams];\n});\n_c = SingleBlog;\nvar _c;\n$RefreshReg$(_c, \"SingleBlog\");","map":{"version":3,"names":["useEffect","useState","useRef","useParams","getPostById","likePost","unlikePost","addComment","jsxDEV","_jsxDEV","SingleBlog","_s","_post$likes","id","post","setPost","commentText","setCommentText","dummyUserId","ws","then","res","data","catch","err","console","error","current","WebSocket","onopen","log","onmessage","event","JSON","parse","postId","_id","onclose","close","sendWsUpdate","updatedPost","readyState","OPEN","send","stringify","handleLike","handleUnlike","likes","length","likeId","handleAddComment","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","body","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Desktop/B3BlogApp/Frontend/src/pages/SingleBlog.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPostById, likePost, unlikePost, addComment } from \"../services/api\";\r\n\r\nexport default function SingleBlog() {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const dummyUserId = \"user123\"; \r\n  const ws = useRef(null); // WebSocket reference\r\n\r\n  // Fetch post on mount\r\n  useEffect(() => {\r\n    getPostById(id)\r\n      .then((res) => setPost(res.data))\r\n      .catch((err) => console.error(err));\r\n  }, [id]);\r\n\r\n  // Setup WebSocket connection\r\n  useEffect(() => {\r\n    ws.current = new WebSocket(\"ws://localhost:4001\");\r\n\r\n    ws.current.onopen = () => console.log(\"WebSocket connected\");\r\n\r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.postId === post?._id) {\r\n        setPost(data.post); // update post in real-time\r\n      }\r\n    };\r\n\r\n    ws.current.onclose = () => console.log(\"WebSocket disconnected\");\r\n\r\n    return () => ws.current.close();\r\n  }, [post?._id]);\r\n\r\n  const sendWsUpdate = (updatedPost) => {\r\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n      ws.current.send(JSON.stringify({ postId: updatedPost._id, post: updatedPost }));\r\n    }\r\n  };\r\n\r\n  // Like post\r\n  const handleLike = async () => {\r\n    try {\r\n      const res = await likePost(post._id, dummyUserId);\r\n      setPost(res.data.post);\r\n      sendWsUpdate(res.data.post); // send update to other clients\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Unlike post\r\n  const handleUnlike = async () => {\r\n    try {\r\n      if (post.likes.length === 0) return;\r\n      const likeId = post.likes[0]._id;\r\n      const res = await unlikePost(post._id, likeId);\r\n      setPost(res.data.post);\r\n      sendWsUpdate(res.data.post);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Add comment\r\n  const handleAddComment = async () => {\r\n    if (!commentText.trim()) return;\r\n    try {\r\n      const res = await addComment(post._id, dummyUserId, commentText);\r\n      setPost(res.data.post);\r\n      setCommentText(\"\");\r\n      sendWsUpdate(res.data.post);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (!post) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>{post.title}</h2>\r\n      <p>{post.body}</p>\r\n\r\n      {/* Likes */}\r\n      <div>\r\n    \r\n    <p>Likes: {post.likes?.length || 0}</p>\r\n        <button onClick={handleLike}>Like</button>\r\n        <button onClick={handleUnlike}>Unlike</button>\r\n      </div>\r\n\r\n      {/* Comments */}\r\n      <div>\r\n        <h3>Comments</h3>\r\n        \r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Write a comment...\"\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment}>Add Comment</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMiB,WAAW,GAAG,SAAS;EAC7B,MAAMC,EAAE,GAAGjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEzB;EACAF,SAAS,CAAC,MAAM;IACdI,WAAW,CAACS,EAAE,CAAC,CACZO,IAAI,CAAEC,GAAG,IAAKN,OAAO,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;;EAER;EACAb,SAAS,CAAC,MAAM;IACdmB,EAAE,CAACQ,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEjDT,EAAE,CAACQ,OAAO,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACK,GAAG,CAAC,qBAAqB,CAAC;IAE5DX,EAAE,CAACQ,OAAO,CAACI,SAAS,GAAIC,KAAK,IAAK;MAChC,MAAMV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACF,KAAK,CAACV,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACa,MAAM,MAAKrB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,GAAG,GAAE;QAC7BrB,OAAO,CAACO,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDK,EAAE,CAACQ,OAAO,CAACU,OAAO,GAAG,MAAMZ,OAAO,CAACK,GAAG,CAAC,wBAAwB,CAAC;IAEhE,OAAO,MAAMX,EAAE,CAACQ,OAAO,CAACW,KAAK,CAAC,CAAC;EACjC,CAAC,EAAE,CAACxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,GAAG,CAAC,CAAC;EAEf,MAAMG,YAAY,GAAIC,WAAW,IAAK;IACpC,IAAIrB,EAAE,CAACQ,OAAO,IAAIR,EAAE,CAACQ,OAAO,CAACc,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MAC1DvB,EAAE,CAACQ,OAAO,CAACgB,IAAI,CAACV,IAAI,CAACW,SAAS,CAAC;QAAET,MAAM,EAAEK,WAAW,CAACJ,GAAG;QAAEtB,IAAI,EAAE0B;MAAY,CAAC,CAAC,CAAC;IACjF;EACF,CAAC;;EAED;EACA,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMxB,GAAG,GAAG,MAAMhB,QAAQ,CAACS,IAAI,CAACsB,GAAG,EAAElB,WAAW,CAAC;MACjDH,OAAO,CAACM,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;MACtByB,YAAY,CAAClB,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,IAAIhC,IAAI,CAACiC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAMC,MAAM,GAAGnC,IAAI,CAACiC,KAAK,CAAC,CAAC,CAAC,CAACX,GAAG;MAChC,MAAMf,GAAG,GAAG,MAAMf,UAAU,CAACQ,IAAI,CAACsB,GAAG,EAAEa,MAAM,CAAC;MAC9ClC,OAAO,CAACM,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;MACtByB,YAAY,CAAClB,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAM0B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAClC,WAAW,CAACmC,IAAI,CAAC,CAAC,EAAE;IACzB,IAAI;MACF,MAAM9B,GAAG,GAAG,MAAMd,UAAU,CAACO,IAAI,CAACsB,GAAG,EAAElB,WAAW,EAAEF,WAAW,CAAC;MAChED,OAAO,CAACM,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;MACtBG,cAAc,CAAC,EAAE,CAAC;MAClBsB,YAAY,CAAClB,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,IAAI,CAACV,IAAI,EAAE,oBAAOL,OAAA;IAAA2C,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnC,oBACE/C,OAAA;IAAKgD,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnB3C,OAAA;MAAA2C,QAAA,EAAKtC,IAAI,CAAC4C;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrB/C,OAAA;MAAA2C,QAAA,EAAItC,IAAI,CAAC6C;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlB/C,OAAA;MAAA2C,QAAA,gBAEF3C,OAAA;QAAA2C,QAAA,GAAG,SAAO,EAAC,EAAAxC,WAAA,GAAAE,IAAI,CAACiC,KAAK,cAAAnC,WAAA,uBAAVA,WAAA,CAAYoC,MAAM,KAAI,CAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC/C,OAAA;QAAQmD,OAAO,EAAEf,UAAW;QAAAO,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1C/C,OAAA;QAAQmD,OAAO,EAAEd,YAAa;QAAAM,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAGN/C,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjB/C,OAAA;QACEoD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE/C,WAAY;QACnBgD,QAAQ,EAAGC,CAAC,IAAKhD,cAAc,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF/C,OAAA;QAAQmD,OAAO,EAAEV,gBAAiB;QAAAE,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7C,EAAA,CAzGuBD,UAAU;EAAA,QACjBP,SAAS;AAAA;AAAAgE,EAAA,GADFzD,UAAU;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}